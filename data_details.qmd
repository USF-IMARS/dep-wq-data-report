---
title: "Data Details"
description: "A summary of data files provided"
code-fold: true
---

```{R} 
#| label: import libraries & functions
#| code-summary: (code) import libraries & functions
#| message: false
#| warning: false

if (!requireNamespace("librarian", quietly = TRUE)) {
  # If not installed, install the package
  install.packages("librarian")
}

librarian::shelf(
  readr,
  skimr,
  glue,
  ggplot2,
  quarto
)
source("R/getData.R")
```

There are three relevant types of data file provided:

```{R}
#| label: preview the raw data
#| code-summary: (code) preview the raw data

inspectData <- function(fpath){
  print(fpath)
  df <- readr::read_csv(fpath)
  print(head(df))
}

inspectData("data/station_sampling_periods_for_all_programs.csv")
inspectData("data/Unified_WQ_Database(2023 updated).csv")
```

Here is a summarizing table of what I see in each file we were provided:

filename                                        | geospatial info     | dt info  | 
------------------------------------------------|---------------------|----------|---
`Merged_*.csv`                                  |  depth?+source+site | MM-YYYY  | 
`station_sampling_periods_for_all_programs.csv` | lat+lon+source+site |          | start+end year + still sampling
`Unified_WQ_Database_*.csv`             | lat+lon+source+site | MM-YYYY | start+end + still sampling

So... in theory `Unified_WQ_Database_*.csv` contains everything we could need.


# Exploratory analyses
A skim view of the data as it loads in:
```{R}
#| label: skim data
#| code-summary: (code) skim the data
#| message: false
data <- readr::read_csv("data/Unified_WQ_Database(2023 updated).csv")

skimr::skim(data)
```

The `Value` is reading in as "Character" when it should be "Numeric".
We can convert it and view the rows that are being lost because they read as non-numeric:

```{R}
#| label: view bad rows
#| code-summary: (code) view bad rows
data <- getData()  # the getData in getData.R reads and converts the Value col 

na_rows <- is.na(data$Value) & !is.na(data$Value_orig)
na_introduced_rows <- data[na_rows, ]

print(na_introduced_rows)
```

The unique problem values in the "Values" column:

```{R}
#| label: view bad `Value` values
#| code-summary: (code) view bad `Value` values
print(unique(na_introduced_rows$Value_orig))
```

