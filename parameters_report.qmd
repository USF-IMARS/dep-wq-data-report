---
title: "Parameters Report"
code-fold: true
---

```{R} 
#| label: import libraries & functions
#| code-summary: (code) import libraries & functions
#| message: false
#| warning: false

if (!requireNamespace("librarian", quietly = TRUE)) {
  # If not installed, install the package
  install.packages("librarian")
}

librarian::shelf(
  glue,
  quarto
)
source("R/getData.R")
```

# Parameters

Available parameters:

```{R}
#| label: view unique paramters
#| code-summary: (code) view unique parameters
data <- getData()
# print unique values in `Parameter` column
unique_parameters <- unique(data$Parameter)
print(unique_parameters)

# NOTE: this ran for 20min and never finished
# # create a violin plot of `Value` grouped by each `Parameter`
# ggplot2::ggplot(df, aes(x=Parameter, y=Value)) +
#     geom_violin(trim=FALSE) +
#     theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
#     labs(title="Violin Plot of Values by Parameter",
#          x="Parameter",
#          y="Value")
```

Render a report for each parameter:
```{R}
#| label: render wq param reports
#| code-summary: (code) render wq param reports
#| include: false  # supress quarto messages


for (wq_param in unique_parameters) {
  print(paste("rendering for ", wq_param))
  params = list(
    parameter_name = wq_param
  )

  # filename = paste0("parameter_report_", params$parameter_name)
  # filepath = paste0(filename, ".html")
  # 
  # # templateName <- "parameter_report_template"
  # quarto::quarto_render(input = paste0(templateName, ".qmd"),
  #                output_format = "html",
  #                execute_params = params,
  #                output_file = filepath,
  #                # execute_dir = "./"
  # )
  # 
  # TODO: need to move the files? [ref](https://jadeyryan.quarto.pub/rladies-dc-quarto-params/slides/#/limitations)
  # Move reports to separate folder ==============================================
  # output_dir <- filename
  # 
  # # List files that contain ".html".
  # files <- fs::dir_ls(here::here(), regexp = ".html$")
  # 
  # # Create directory if needed
  # fs::dir_create(output_dir)
  # 
  # # Move the files
  # fs::file_move(files, output_dir)
  # fs::file_move(paste0(templateName, "_files"), output_dir)
  
}
```

```{R}
#| label: print wq report links
#| code-summary: (code) view wq report links
#| results: asis  # passthrough html+markdown
for (wq_param in unique_parameters) {
  # NOTE: these lines copied from last loop
  params = list(
    parameter_name = wq_param
  )
  filename = paste0("parameter_report_", params$parameter_name)
  filepath = paste0(filename, ".html")

  print(glue::glue("* [{filepath}](./{filepath}) \n"))
}
```
